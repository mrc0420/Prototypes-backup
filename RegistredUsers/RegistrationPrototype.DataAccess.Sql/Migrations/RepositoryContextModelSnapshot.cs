// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistrationPrototype.DataAccess.Sql.Repository;

namespace RegistrationPrototype.DataAccess.Sql.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RegistrationPrototype.DataAccess.Sql.Models.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Password");

                    b.Property<int>("UserId");

                    b.Property<int>("UserType");

                    b.HasKey("LoginId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Login");
                });

            modelBuilder.Entity("RegistrationPrototype.DataAccess.Sql.Models.PersonelDetails", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Affiliation");

                    b.Property<byte[]>("ProfilePicture");

                    b.Property<int>("UserId");

                    b.HasKey("PersonelId");

                    b.HasIndex("UserId");

                    b.ToTable("PersonelDetails");
                });

            modelBuilder.Entity("RegistrationPrototype.DataAccess.Sql.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("MiddleName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RegistrationPrototype.DataAccess.Sql.Models.Login", b =>
                {
                    b.HasOne("RegistrationPrototype.DataAccess.Sql.Models.User", "User")
                        .WithOne("Login")
                        .HasForeignKey("RegistrationPrototype.DataAccess.Sql.Models.Login", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RegistrationPrototype.DataAccess.Sql.Models.PersonelDetails", b =>
                {
                    b.HasOne("RegistrationPrototype.DataAccess.Sql.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
